// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`checking LoadingModal component InfoModal inner functionallity tests 1`] = `
<Modal
  animationType="none"
  deviceHeight={1334}
  deviceWidth={750}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={false}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    collapsable={false}
    deviceHeight={1334}
    deviceWidth={750}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "margin": 0,
        "marginBottom": 0,
        "opacity": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      accessibilityState={
        Object {
          "selected": undefined,
        }
      }
      activeOpacity={1}
      delayPressIn={10}
      enableShadow={true}
      row={false}
      style={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          Object {},
          Object {},
          Object {},
          Array [
            Object {
              "borderRadius": 12,
              "height": undefined,
              "overflow": "visible",
              "width": undefined,
            },
            Object {
              "borderRadius": 12,
            },
            Object {
              "elevation": 2,
            },
            Object {
              "shadowColor": "#A6ACB1",
              "shadowOffset": Object {
                "height": 5,
                "width": 0,
              },
              "shadowOpacity": 0.25,
              "shadowRadius": 12,
            },
            Object {
              "backgroundColor": "#FFFFFF",
            },
            undefined,
            Array [
              Object {
                "alignItems": "center",
                "flex": 0,
                "flexDirection": "column",
                "flexShrink": 1,
                "height": 200,
                "marginHorizontal": "15%",
                "marginVertical": "10%",
                "padding": 10,
              },
              Object {
                "borderRadius": 20,
                "elevation": 3,
                "shadowColor": undefined,
                "shadowOffset": Object {
                  "height": 6,
                  "width": 0,
                },
                "shadowOpacity": 0.39,
                "shadowRadius": 8.3,
              },
            ],
          ],
        ]
      }
      useNative={true}
    >
      <Text
        style={
          Object {
            "color": "#05214D",
            "fontSize": 24,
            "fontWeight": "900",
            "paddingVertical": 20,
            "textAlign": "center",
          }
        }
      >
        Title
      </Text>
      <RCTScrollView
        collapsable={false}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        showsVerticalScrollIndicator={false}
      >
        <View>
          <Text
            style={
              Object {
                "color": "#05214D",
                "fontSize": 16,
                "fontWeight": "400",
                "paddingVertical": 20,
                "textAlign": "justify",
              }
            }
          >
            description
          </Text>
        </View>
      </RCTScrollView>
    </View>
  </View>
</Modal>
`;
