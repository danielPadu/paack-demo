// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`checking LoadingModal component LoadingModal inner functionallity tests 1`] = `
<Modal
  animationType="none"
  deviceHeight={1334}
  deviceWidth={750}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={false}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    collapsable={false}
    deviceHeight={1334}
    deviceWidth={750}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 0,
        "marginBottom": 0,
        "opacity": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "bottom": 0,
          "flex": 1,
          "justifyContent": "center",
          "left": 0,
          "opacity": 0.8,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 99999,
        }
      }
    >
      <View
        indeterminateAnimationDuration={1000}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <RNSVGSvgView
          bbHeight={90}
          bbWidth={90}
          collapsable={false}
          focusable={false}
          height={90}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "transform": Array [
                  Object {
                    "rotate": "0deg",
                  },
                ],
              },
              Object {
                "flex": 0,
                "height": 90,
                "width": 90,
              },
            ]
          }
          width={90}
        >
          <RNSVGGroup
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
          >
            <RNSVGPath
              d="M45 5
          A40 40 0 1 1 21.488589908301066 12.639320225002109"
              propList={
                Array [
                  "stroke",
                  "strokeWidth",
                  "strokeLinecap",
                ]
              }
              stroke={4286611584}
              strokeLinecap={1}
              strokeWidth={10}
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</Modal>
`;
